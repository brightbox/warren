= Warren

Library for sending and receiving messages, complete with en/decrypting messages on either side of the transport. 

It was written to handle sending messages between two nodes using RabbitMQ, which is why the two default adapters are for synchronous and asynchronous rabbitmq client libraries. You can delegate the sending & receiving to any custom class you want, simply by subclassing Warren::Queue. (Isn't ruby magic marvelous!)

The filtering works in much the same way as the adapter class. There is a default YAML filter that is always called last before sending the message and first when receiving the message, simply to make sure the message is a string when sent + received. You can then add custom classes onto the stack in any order you want, simply by subclassing Warren::MessageFilter. Add them in the same order on the receiving side and warren takes care of calling them in reverse order.

Start by looking at examples/ to see how to use it, and then lib/warren/adapters/ to see how to implement your own adapter class and lib/warren/filters to see how to implement your own filters.

== Installation

    gem install brightbox-warren

== Usage

    require "rubygems"
    require "warren"
    # Pull in the bunny adapter
    require "warren/adapters/bunny_adapter"
    
    # See examples/ for more

== License

Licensed under the MIT license. See LICENSE for more details.